(util.ps) run

/f (day9.txt) (r) file def
/lines
[
    {
        f 1024 string readline
        not { pop exit } if
        % skip empty line
        dup () eq { pop } if
    } loop
] def
f closefile

/input lines {cvi} array_map def

/PREAMBLE 25 def

% part 1
PREAMBLE 1 lines length 1 sub {
    dup input exch get
    /target_sum exch def
    PREAMBLE sub PREAMBLE 
    input 3 1 roll getinterval
    /preamble_array exch def

    % make a copy of the preamble
    preamble_array dup length array copy
    {target_sum exch sub} bind array_map
    
    % accumulate whether we found target in the array
    false
    exch
    {
        preamble_array exch in_array
        or
    } forall

    not {
        (part 1: ) print
        target_sum =
        exit
    }  if
} for

% part 2 ??
2 1 input length {
    0
    1
    input length 3 index sub
    {
        over
        input 3 1 roll
        getinterval
        dup
        0
        exch { add } forall
        target_sum eq {
            (found target sum!) =
            exch pop
            quicksort
            dup dup length 1 sub get
            exch 0 get
            add
            =
            quit
        } if

        % discard subarray
        pop
    } for
    pop
} for

quit